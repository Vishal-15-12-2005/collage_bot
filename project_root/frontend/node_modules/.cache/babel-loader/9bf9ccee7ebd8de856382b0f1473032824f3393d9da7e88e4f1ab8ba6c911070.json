{"ast":null,"code":"var _jsxFileName = \"H:\\\\camera\\\\project_root\\\\frontend\\\\src\\\\pages\\\\RobotController.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { FiMic, FiCpu } from 'react-icons/fi';\nimport { speakWithAudioFeedback, stopSpeaking } from '../utils/voice';\nimport { startListening, stopListening } from '../utils/speechRecognition';\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nexport default function RobotController() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [recognizedName, setRecognizedName] = useState('');\n  const [collegeName, setCollegeName] = useState('Your College');\n  const [robotMessage, setRobotMessage] = useState('🎓 Initializing...');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [volume, setVolume] = useState(0);\n  const [currentFace, setCurrentFace] = useState(null);\n  const [lastSeen, setLastSeen] = useState(0);\n  const micActive = useRef(false);\n  useEffect(() => {\n    fetchCollegeName();\n    startSpeechListener();\n    const interval = setInterval(checkFace, 1500);\n    return () => {\n      clearInterval(interval);\n      stopListening();\n    };\n  }, []);\n  const fetchCollegeName = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/college_name`);\n      setCollegeName(res.data.name || 'Your College');\n    } catch {\n      setCollegeName('Unknown College');\n    }\n  };\n  const checkFace = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\n      const {\n        name\n      } = res.data;\n      if (name && name !== 'Unknown' && name !== currentFace) {\n        greet(name);\n        setCurrentFace(name);\n        setLastSeen(Date.now());\n      } else if (name === 'Unknown' && currentFace !== 'Unknown') {\n        setCurrentFace('Unknown');\n        setRobotMessage('🤖 Face not recognized...');\n      }\n    } catch (e) {\n      console.error('Face recognition error:', e);\n    }\n  };\n  const greet = name => {\n    const greeting = `Hi ${name}, I’m CollegeBot from ${collegeName}. How can I assist you today?`;\n    speakWithInterrupt(greeting);\n    setRecognizedName(name);\n    setRobotMessage(greeting);\n  };\n  const speakWithInterrupt = text => {\n    stopSpeaking(); // Cancel any ongoing speech\n    setIsSpeaking(true);\n    speakWithAudioFeedback(text, setVolume, () => {\n      setIsSpeaking(false);\n    });\n  };\n  const handleTranscript = async text => {\n    stopSpeaking(); // Interrupt any response\n    setRobotMessage(`🎤 You said: ${text}`);\n    try {\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\n        query: text\n      });\n      const reply = res.data.response;\n      speakWithInterrupt(reply);\n      setRobotMessage(reply);\n    } catch {\n      speakWithInterrupt(\"Sorry, I couldn't fetch a response.\");\n    }\n  };\n  const startSpeechListener = () => {\n    if (micActive.current) return;\n    micActive.current = true;\n    startListening(handleTranscript);\n  };\n  useEffect(() => {\n    const drawOverlay = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n      const img = videoRef.current;\n      if (!canvas || !ctx || !img) return;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = currentFace && currentFace !== 'Unknown' ? '#28a745' : '#d63384';\n      ctx.font = 'bold 1.5rem sans-serif';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      ctx.fillText(currentFace && currentFace !== 'Unknown' ? `🎉 Hello, ${currentFace}` : '🤖 Face Not Recognized', canvas.width / 2, 20);\n    };\n    drawOverlay();\n    const obs = new ResizeObserver(drawOverlay);\n    if (videoRef.current) obs.observe(videoRef.current);\n    return () => obs.disconnect();\n  }, [currentFace]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto p-4 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-card p-6 flex items-center space-x-3\",\n      children: [/*#__PURE__*/_jsxDEV(FiCpu, {\n        size: 24,\n        className: \"text-white p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold gradient-text\",\n          children: \"Robot Controller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Live voice + vision Gemini-style assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card overflow-hidden relative h-[450px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: videoRef,\n          src: `${API_URL}/video_feed`,\n          alt: \"Robot Camera\",\n          className: \"absolute inset-0 w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute inset-0 w-full h-full pointer-events-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card flex flex-col justify-between p-6 h-[450px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FiMic, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), \" Robot Assistant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RobotSpeechDisplay, {\n          message: robotMessage,\n          isSpeaking: isSpeaking,\n          volume: volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-300 mt-4 flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"College: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: collegeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Mic: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-green-600\",\n              children: \"\\uD83C\\uDF99\\uFE0F On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotController, \"gkZ+bQ1/PQJFoGY5hOFyz1WyarY=\");\n_c = RobotController;\nvar _c;\n$RefreshReg$(_c, \"RobotController\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","FiMic","FiCpu","speakWithAudioFeedback","stopSpeaking","startListening","stopListening","RobotSpeechDisplay","jsxDEV","_jsxDEV","API_URL","RobotController","_s","videoRef","canvasRef","recognizedName","setRecognizedName","collegeName","setCollegeName","robotMessage","setRobotMessage","isSpeaking","setIsSpeaking","volume","setVolume","currentFace","setCurrentFace","lastSeen","setLastSeen","micActive","fetchCollegeName","startSpeechListener","interval","setInterval","checkFace","clearInterval","res","get","data","name","greet","Date","now","e","console","error","greeting","speakWithInterrupt","text","handleTranscript","post","query","reply","response","current","drawOverlay","canvas","ctx","getContext","img","width","height","clearRect","fillStyle","font","textAlign","textBaseline","fillText","obs","ResizeObserver","observe","disconnect","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","message","_c","$RefreshReg$"],"sources":["H:/camera/project_root/frontend/src/pages/RobotController.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FiMic, FiCpu } from 'react-icons/fi';\r\nimport { speakWithAudioFeedback, stopSpeaking } from '../utils/voice';\r\nimport { startListening, stopListening } from '../utils/speechRecognition';\r\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nexport default function RobotController() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const [recognizedName, setRecognizedName] = useState('');\r\n  const [collegeName, setCollegeName] = useState('Your College');\r\n  const [robotMessage, setRobotMessage] = useState('🎓 Initializing...');\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [volume, setVolume] = useState(0);\r\n  const [currentFace, setCurrentFace] = useState(null);\r\n  const [lastSeen, setLastSeen] = useState(0);\r\n\r\n  const micActive = useRef(false);\r\n\r\n  useEffect(() => {\r\n    fetchCollegeName();\r\n    startSpeechListener();\r\n    const interval = setInterval(checkFace, 1500);\r\n    return () => {\r\n      clearInterval(interval);\r\n      stopListening();\r\n    };\r\n  }, []);\r\n\r\n  const fetchCollegeName = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/college_name`);\r\n      setCollegeName(res.data.name || 'Your College');\r\n    } catch {\r\n      setCollegeName('Unknown College');\r\n    }\r\n  };\r\n\r\n  const checkFace = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\r\n      const { name } = res.data;\r\n\r\n      if (name && name !== 'Unknown' && name !== currentFace) {\r\n        greet(name);\r\n        setCurrentFace(name);\r\n        setLastSeen(Date.now());\r\n      } else if (name === 'Unknown' && currentFace !== 'Unknown') {\r\n        setCurrentFace('Unknown');\r\n        setRobotMessage('🤖 Face not recognized...');\r\n      }\r\n    } catch (e) {\r\n      console.error('Face recognition error:', e);\r\n    }\r\n  };\r\n\r\n  const greet = (name) => {\r\n    const greeting = `Hi ${name}, I’m CollegeBot from ${collegeName}. How can I assist you today?`;\r\n    speakWithInterrupt(greeting);\r\n    setRecognizedName(name);\r\n    setRobotMessage(greeting);\r\n  };\r\n\r\n  const speakWithInterrupt = (text) => {\r\n    stopSpeaking(); // Cancel any ongoing speech\r\n    setIsSpeaking(true);\r\n    speakWithAudioFeedback(text, setVolume, () => {\r\n      setIsSpeaking(false);\r\n    });\r\n  };\r\n\r\n  const handleTranscript = async (text) => {\r\n    stopSpeaking(); // Interrupt any response\r\n    setRobotMessage(`🎤 You said: ${text}`);\r\n    try {\r\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\r\n        query: text,\r\n      });\r\n      const reply = res.data.response;\r\n      speakWithInterrupt(reply);\r\n      setRobotMessage(reply);\r\n    } catch {\r\n      speakWithInterrupt(\"Sorry, I couldn't fetch a response.\");\r\n    }\r\n  };\r\n\r\n  const startSpeechListener = () => {\r\n    if (micActive.current) return;\r\n    micActive.current = true;\r\n    startListening(handleTranscript);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const drawOverlay = () => {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas?.getContext('2d');\r\n      const img = videoRef.current;\r\n      if (!canvas || !ctx || !img) return;\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.fillStyle = currentFace && currentFace !== 'Unknown' ? '#28a745' : '#d63384';\r\n      ctx.font = 'bold 1.5rem sans-serif';\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'top';\r\n      ctx.fillText(\r\n        currentFace && currentFace !== 'Unknown' ? `🎉 Hello, ${currentFace}` : '🤖 Face Not Recognized',\r\n        canvas.width / 2,\r\n        20\r\n      );\r\n    };\r\n    drawOverlay();\r\n    const obs = new ResizeObserver(drawOverlay);\r\n    if (videoRef.current) obs.observe(videoRef.current);\r\n    return () => obs.disconnect();\r\n  }, [currentFace]);\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto p-4 space-y-6\">\r\n      <div className=\"glass-card p-6 flex items-center space-x-3\">\r\n        <FiCpu size={24} className=\"text-white p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600\" />\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold gradient-text\">Robot Controller</h1>\r\n          <p className=\"text-gray-600\">Live voice + vision Gemini-style assistant</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"glass-card overflow-hidden relative h-[450px]\">\r\n          <img\r\n            ref={videoRef}\r\n            src={`${API_URL}/video_feed`}\r\n            alt=\"Robot Camera\"\r\n            className=\"absolute inset-0 w-full h-full object-cover\"\r\n          />\r\n          <canvas ref={canvasRef} className=\"absolute inset-0 w-full h-full pointer-events-none\" />\r\n        </div>\r\n\r\n        <div className=\"glass-card flex flex-col justify-between p-6 h-[450px]\">\r\n          <h2 className=\"text-xl font-bold mb-4 flex items-center\">\r\n            <FiMic className=\"mr-2\" /> Robot Assistant\r\n          </h2>\r\n          <RobotSpeechDisplay\r\n            message={robotMessage}\r\n            isSpeaking={isSpeaking}\r\n            volume={volume}\r\n          />\r\n          <div className=\"text-sm text-gray-600 dark:text-gray-300 mt-4 flex justify-between\">\r\n            <span>College: <strong>{collegeName}</strong></span>\r\n            <span>Mic: <strong className=\"text-green-600\">🎙️ On</strong></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}