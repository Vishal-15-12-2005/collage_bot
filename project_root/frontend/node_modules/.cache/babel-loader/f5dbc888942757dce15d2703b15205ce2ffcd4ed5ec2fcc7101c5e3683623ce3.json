{"ast":null,"code":"// utils/voice.js\n\nlet speechRecognition;\nlet listening = false;\nexport function initSpeechRecognition(onTranscript) {\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  if (!SpeechRecognition) {\n    console.error(\"Speech Recognition not supported\");\n    return null;\n  }\n  if (!speechRecognition) {\n    speechRecognition = new SpeechRecognition();\n    speechRecognition.continuous = true;\n    speechRecognition.interimResults = true;\n    speechRecognition.lang = 'en-US';\n    speechRecognition.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0].transcript).join('');\n      onTranscript(transcript, event.results[event.results.length - 1].isFinal);\n    };\n    speechRecognition.onerror = e => console.error('SpeechRecognition Error:', e);\n  }\n  return speechRecognition;\n}\nexport function startListening(onTranscript) {\n  const recognition = initSpeechRecognition(onTranscript);\n  if (!recognition || listening) return;\n  recognition.start();\n  listening = true;\n}\nexport function stopListening() {\n  if (speechRecognition && listening) {\n    speechRecognition.stop();\n    listening = false;\n  }\n}\nexport function speakWithAudioFeedback(text, setVolume, onEnd) {\n  const synth = window.speechSynthesis;\n  if (!synth) return;\n  synth.cancel(); // cancel anything ongoing\n\n  const utter = new SpeechSynthesisUtterance(text);\n  utter.lang = 'en-US';\n  let volInterval;\n  utter.onstart = () => {\n    volInterval = setInterval(() => {\n      const fakeVol = Math.random();\n      setVolume(fakeVol);\n    }, 100);\n  };\n  utter.onend = () => {\n    clearInterval(volInterval);\n    setVolume(0);\n    if (onEnd) onEnd();\n  };\n  synth.speak(utter);\n}\nexport function stopSpeaking() {\n  if (window.speechSynthesis) {\n    window.speechSynthesis.cancel();\n  }\n}","map":{"version":3,"names":["speechRecognition","listening","initSpeechRecognition","onTranscript","SpeechRecognition","window","webkitSpeechRecognition","console","error","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","length","isFinal","onerror","e","startListening","recognition","start","stopListening","stop","speakWithAudioFeedback","text","setVolume","onEnd","synth","speechSynthesis","cancel","utter","SpeechSynthesisUtterance","volInterval","onstart","setInterval","fakeVol","Math","random","onend","clearInterval","speak","stopSpeaking"],"sources":["H:/camera/project_root/frontend/src/utils/voice.js"],"sourcesContent":["// utils/voice.js\r\n\r\nlet speechRecognition;\r\nlet listening = false;\r\n\r\nexport function initSpeechRecognition(onTranscript) {\r\n  const SpeechRecognition =\r\n    window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n  if (!SpeechRecognition) {\r\n    console.error(\"Speech Recognition not supported\");\r\n    return null;\r\n  }\r\n\r\n  if (!speechRecognition) {\r\n    speechRecognition = new SpeechRecognition();\r\n    speechRecognition.continuous = true;\r\n    speechRecognition.interimResults = true;\r\n    speechRecognition.lang = 'en-US';\r\n\r\n    speechRecognition.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0].transcript)\r\n        .join('');\r\n      onTranscript(transcript, event.results[event.results.length - 1].isFinal);\r\n    };\r\n\r\n    speechRecognition.onerror = (e) => console.error('SpeechRecognition Error:', e);\r\n  }\r\n\r\n  return speechRecognition;\r\n}\r\n\r\nexport function startListening(onTranscript) {\r\n  const recognition = initSpeechRecognition(onTranscript);\r\n  if (!recognition || listening) return;\r\n  recognition.start();\r\n  listening = true;\r\n}\r\n\r\nexport function stopListening() {\r\n  if (speechRecognition && listening) {\r\n    speechRecognition.stop();\r\n    listening = false;\r\n  }\r\n}\r\n\r\nexport function speakWithAudioFeedback(text, setVolume, onEnd) {\r\n  const synth = window.speechSynthesis;\r\n  if (!synth) return;\r\n\r\n  synth.cancel(); // cancel anything ongoing\r\n\r\n  const utter = new SpeechSynthesisUtterance(text);\r\n  utter.lang = 'en-US';\r\n\r\n  let volInterval;\r\n\r\n  utter.onstart = () => {\r\n    volInterval = setInterval(() => {\r\n      const fakeVol = Math.random();\r\n      setVolume(fakeVol);\r\n    }, 100);\r\n  };\r\n\r\n  utter.onend = () => {\r\n    clearInterval(volInterval);\r\n    setVolume(0);\r\n    if (onEnd) onEnd();\r\n  };\r\n\r\n  synth.speak(utter);\r\n}\r\n\r\nexport function stopSpeaking() {\r\n  if (window.speechSynthesis) {\r\n    window.speechSynthesis.cancel();\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB;AACrB,IAAIC,SAAS,GAAG,KAAK;AAErB,OAAO,SAASC,qBAAqBA,CAACC,YAAY,EAAE;EAClD,MAAMC,iBAAiB,GACrBC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;EAE5D,IAAI,CAACF,iBAAiB,EAAE;IACtBG,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;IACjD,OAAO,IAAI;EACb;EAEA,IAAI,CAACR,iBAAiB,EAAE;IACtBA,iBAAiB,GAAG,IAAII,iBAAiB,CAAC,CAAC;IAC3CJ,iBAAiB,CAACS,UAAU,GAAG,IAAI;IACnCT,iBAAiB,CAACU,cAAc,GAAG,IAAI;IACvCV,iBAAiB,CAACW,IAAI,GAAG,OAAO;IAEhCX,iBAAiB,CAACY,QAAQ,GAAIC,KAAK,IAAK;MACtC,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC,CACzCC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,CAACL,UAAU,CAAC,CACnCM,IAAI,CAAC,EAAE,CAAC;MACXjB,YAAY,CAACW,UAAU,EAAED,KAAK,CAACI,OAAO,CAACJ,KAAK,CAACI,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC;IAC3E,CAAC;IAEDtB,iBAAiB,CAACuB,OAAO,GAAIC,CAAC,IAAKjB,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEgB,CAAC,CAAC;EACjF;EAEA,OAAOxB,iBAAiB;AAC1B;AAEA,OAAO,SAASyB,cAAcA,CAACtB,YAAY,EAAE;EAC3C,MAAMuB,WAAW,GAAGxB,qBAAqB,CAACC,YAAY,CAAC;EACvD,IAAI,CAACuB,WAAW,IAAIzB,SAAS,EAAE;EAC/ByB,WAAW,CAACC,KAAK,CAAC,CAAC;EACnB1B,SAAS,GAAG,IAAI;AAClB;AAEA,OAAO,SAAS2B,aAAaA,CAAA,EAAG;EAC9B,IAAI5B,iBAAiB,IAAIC,SAAS,EAAE;IAClCD,iBAAiB,CAAC6B,IAAI,CAAC,CAAC;IACxB5B,SAAS,GAAG,KAAK;EACnB;AACF;AAEA,OAAO,SAAS6B,sBAAsBA,CAACC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAE;EAC7D,MAAMC,KAAK,GAAG7B,MAAM,CAAC8B,eAAe;EACpC,IAAI,CAACD,KAAK,EAAE;EAEZA,KAAK,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAMC,KAAK,GAAG,IAAIC,wBAAwB,CAACP,IAAI,CAAC;EAChDM,KAAK,CAAC1B,IAAI,GAAG,OAAO;EAEpB,IAAI4B,WAAW;EAEfF,KAAK,CAACG,OAAO,GAAG,MAAM;IACpBD,WAAW,GAAGE,WAAW,CAAC,MAAM;MAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;MAC7BZ,SAAS,CAACU,OAAO,CAAC;IACpB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAEDL,KAAK,CAACQ,KAAK,GAAG,MAAM;IAClBC,aAAa,CAACP,WAAW,CAAC;IAC1BP,SAAS,CAAC,CAAC,CAAC;IACZ,IAAIC,KAAK,EAAEA,KAAK,CAAC,CAAC;EACpB,CAAC;EAEDC,KAAK,CAACa,KAAK,CAACV,KAAK,CAAC;AACpB;AAEA,OAAO,SAASW,YAAYA,CAAA,EAAG;EAC7B,IAAI3C,MAAM,CAAC8B,eAAe,EAAE;IAC1B9B,MAAM,CAAC8B,eAAe,CAACC,MAAM,CAAC,CAAC;EACjC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}