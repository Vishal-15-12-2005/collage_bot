{"ast":null,"code":"var _jsxFileName = \"H:\\\\camera\\\\project_root\\\\frontend\\\\src\\\\pages\\\\RobotView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport API from '../utils/api';\nimport CanvasResponse from '../components/CanvasResponse';\nimport { FiMessageCircle } from 'react-icons/fi';\nimport { logChat as logChatUtil } from '../utils/chat_logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RobotView() {\n  _s();\n  const [robotMessage, setRobotMessage] = useState('Initializing...');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [lastName, setLastName] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const speak = text => {\n    const synth = window.speechSynthesis;\n    const utter = new SpeechSynthesisUtterance(text);\n    utter.onstart = () => setIsSpeaking(true);\n    utter.onend = () => setIsSpeaking(false);\n    synth.speak(utter);\n  };\n  const fetchRecognition = async () => {\n    try {\n      const res = await API.get('/recognized_face');\n      const {\n        name,\n        confidence\n      } = res.data;\n      if (name && name !== lastName && name !== 'Unknown' && name !== 'No face') {\n        const greet = `Hi ${name}, I'm your college assistant. How can I help you?`;\n        setRobotMessage(greet);\n        setLastName(name);\n        speak(greet);\n        logChat('robot', name, greet);\n      } else if (name === 'Unknown') {\n        const msg = `Hello! I don't recognize you. Please contact admin.`;\n        setRobotMessage(msg);\n        setLastName('');\n        speak(msg);\n        logChat('robot', 'unknown', msg);\n      }\n    } catch (err) {\n      console.error('Recognition failed:', err);\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(fetchRecognition, 3000);\n    return () => clearInterval(interval);\n  }, [lastName]);\n  const logChat = async (sender, receiver, message) => {\n    setChatLog(prev => [...prev, {\n      sender,\n      receiver,\n      message\n    }]);\n    await logChatUtil({\n      sender,\n      receiver,\n      message\n    });\n  };\n  const handleAsk = async inputText => {\n    const question = inputText || userInput;\n    if (!question.trim()) return;\n    setChatLog(prev => [...prev, {\n      sender: 'user',\n      receiver: lastName || 'robot',\n      message: question\n    }]);\n    try {\n      const res = await API.get(`/info?question=${encodeURIComponent(question)}`);\n      const answer = res.data.response;\n      setRobotMessage(answer);\n      speak(answer);\n      logChat('robot', lastName || 'user', answer);\n    } catch (err) {\n      const errMsg = 'Error: Unable to fetch response.';\n      setRobotMessage(errMsg);\n      speak(errMsg);\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 fade-in sticky top-0 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-card p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold gradient-text mb-2\",\n        children: \"Robot View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 dark:text-gray-300\",\n        children: \"Interactive camera + assistant canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card p-4 relative min-h-[420px] flex flex-col justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800 dark:text-white\",\n          children: \"Live Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-96 bg-black rounded-xl overflow-hidden flex items-center justify-center relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:5000/video_feed\",\n            alt: \"Live Feed\",\n            className: \"w-full h-full object-cover\",\n            onError: e => {\n              e.target.style.display = 'none';\n              document.getElementById('video-fallback').style.display = 'block';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"video-fallback\",\n            style: {\n              display: 'none'\n            },\n            className: \"absolute text-gray-400 text-lg left-1/2 top-1/2\",\n            children: \"Video feed unavailable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card p-4 flex flex-col items-center min-h-[400px] justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800 dark:text-white\",\n          children: \"Robot Canvas Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex-1 flex flex-col justify-center items-center\",\n          children: [/*#__PURE__*/_jsxDEV(CanvasResponse, {\n            message: robotMessage,\n            isSpeaking: isSpeaking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              minHeight: 120,\n              width: '100%',\n              border: '2px dashed #a0aec0',\n              borderRadius: 16,\n              marginTop: 16,\n              background: 'rgba(255,255,255,0.08)',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: !robotMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: \"Robot canvas is ready\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-48 overflow-y-auto bg-white/10 rounded-xl p-4 space-y-2 text-sm text-gray-800 dark:text-white font-mono\",\n            children: chatLog.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400\",\n              children: \"No chat yet. Start a conversation!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this) : chatLog.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-2 rounded-lg ${entry.sender === 'robot' ? 'bg-blue-100 dark:bg-blue-800/30' : 'bg-gray-200 dark:bg-gray-700/50'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: entry.sender === 'robot' ? 'ðŸ¤– Robot:' : 'ðŸ‘¤ User:'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), \" \", entry.message, entry.receiver && entry.receiver !== 'robot' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs text-gray-500\",\n                children: [\"to \", entry.receiver]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"flex-1 rounded-l-xl px-4 py-2 border border-gray-300 dark:border-gray-700 focus:outline-none\",\n              placeholder: \"Ask the robot...\",\n              value: userInput,\n              onChange: e => setUserInput(e.target.value),\n              onKeyDown: e => e.key === 'Enter' && handleAsk()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary rounded-r-xl px-4 flex items-center\",\n              onClick: () => handleAsk(),\n              children: [/*#__PURE__*/_jsxDEV(FiMessageCircle, {\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), \" Ask\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotView, \"uYDYjz+9Dasq964PyPFD1uxuIIM=\");\n_c = RobotView;\nvar _c;\n$RefreshReg$(_c, \"RobotView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","API","CanvasResponse","FiMessageCircle","logChat","logChatUtil","jsxDEV","_jsxDEV","RobotView","_s","robotMessage","setRobotMessage","isSpeaking","setIsSpeaking","lastName","setLastName","chatLog","setChatLog","userInput","setUserInput","isListening","setIsListening","speak","text","synth","window","speechSynthesis","utter","SpeechSynthesisUtterance","onstart","onend","fetchRecognition","res","get","name","confidence","data","greet","msg","err","console","error","interval","setInterval","clearInterval","sender","receiver","message","prev","handleAsk","inputText","question","trim","encodeURIComponent","answer","response","errMsg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onError","e","target","style","display","document","getElementById","id","minHeight","width","border","borderRadius","marginTop","background","alignItems","justifyContent","length","map","entry","i","placeholder","value","onChange","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["H:/camera/project_root/frontend/src/pages/RobotView.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport API from '../utils/api';\r\nimport CanvasResponse from '../components/CanvasResponse';\r\nimport { FiMessageCircle } from 'react-icons/fi';\r\nimport { logChat as logChatUtil } from '../utils/chat_logger';\r\n\r\nexport default function RobotView() {\r\n  const [robotMessage, setRobotMessage] = useState('Initializing...');\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [lastName, setLastName] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n\r\n  const speak = (text) => {\r\n    const synth = window.speechSynthesis;\r\n    const utter = new SpeechSynthesisUtterance(text);\r\n    utter.onstart = () => setIsSpeaking(true);\r\n    utter.onend = () => setIsSpeaking(false);\r\n    synth.speak(utter);\r\n  };\r\n\r\n  const fetchRecognition = async () => {\r\n    try {\r\n      const res = await API.get('/recognized_face');\r\n      const { name, confidence } = res.data;\r\n      if (name && name !== lastName && name !== 'Unknown' && name !== 'No face') {\r\n        const greet = `Hi ${name}, I'm your college assistant. How can I help you?`;\r\n        setRobotMessage(greet);\r\n        setLastName(name);\r\n        speak(greet);\r\n        logChat('robot', name, greet);\r\n      } else if (name === 'Unknown') {\r\n        const msg = `Hello! I don't recognize you. Please contact admin.`;\r\n        setRobotMessage(msg);\r\n        setLastName('');\r\n        speak(msg);\r\n        logChat('robot', 'unknown', msg);\r\n      }\r\n    } catch (err) {\r\n      console.error('Recognition failed:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(fetchRecognition, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [lastName]);\r\n\r\n  const logChat = async (sender, receiver, message) => {\r\n    setChatLog((prev) => [...prev, { sender, receiver, message }]);\r\n    await logChatUtil({ sender, receiver, message });\r\n  };\r\n\r\n  const handleAsk = async (inputText) => {\r\n    const question = inputText || userInput;\r\n    if (!question.trim()) return;\r\n    setChatLog((prev) => [...prev, { sender: 'user', receiver: lastName || 'robot', message: question }]);\r\n    try {\r\n      const res = await API.get(`/info?question=${encodeURIComponent(question)}`);\r\n      const answer = res.data.response;\r\n      setRobotMessage(answer);\r\n      speak(answer);\r\n      logChat('robot', lastName || 'user', answer);\r\n    } catch (err) {\r\n      const errMsg = 'Error: Unable to fetch response.';\r\n      setRobotMessage(errMsg);\r\n      speak(errMsg);\r\n    }\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6 fade-in sticky top-0 z-50\">\r\n      {/* Header */}\r\n      <div className=\"glass-card p-6\">\r\n        <h1 className=\"text-3xl font-bold gradient-text mb-2\">Robot View</h1>\r\n        <p className=\"text-gray-600 dark:text-gray-300\">Interactive camera + assistant canvas</p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Video Feed */}\r\n        <div className=\"glass-card p-4 relative min-h-[420px] flex flex-col justify-center items-center\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">Live Feed</h2>\r\n          <div className=\"w-full h-96 bg-black rounded-xl overflow-hidden flex items-center justify-center relative\">\r\n            <img\r\n              src=\"http://localhost:5000/video_feed\"\r\n              alt=\"Live Feed\"\r\n              className=\"w-full h-full object-cover\"\r\n              onError={e => { e.target.style.display = 'none'; document.getElementById('video-fallback').style.display = 'block'; }}\r\n            />\r\n            <span id=\"video-fallback\" style={{display:'none'}} className=\"absolute text-gray-400 text-lg left-1/2 top-1/2\" >\r\n              Video feed unavailable\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Canvas + Chat */}\r\n        <div className=\"glass-card p-4 flex flex-col items-center min-h-[400px] justify-between\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">\r\n            Robot Canvas Response\r\n          </h2>\r\n          <div className=\"w-full flex-1 flex flex-col justify-center items-center\">\r\n            <CanvasResponse message={robotMessage} isSpeaking={isSpeaking} />\r\n            <div style={{ minHeight: 120, width: '100%', border: '2px dashed #a0aec0', borderRadius: 16, marginTop: 16, background: 'rgba(255,255,255,0.08)', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n              {!robotMessage && <span className=\"text-gray-400\">Robot canvas is ready</span>}\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-6 w-full\">\r\n            <div className=\"h-48 overflow-y-auto bg-white/10 rounded-xl p-4 space-y-2 text-sm text-gray-800 dark:text-white font-mono\">\r\n              {chatLog.length === 0 ? (\r\n                <div className=\"text-gray-400\">No chat yet. Start a conversation!</div>\r\n              ) : (\r\n                chatLog.map((entry, i) => (\r\n                  <div key={i} className={`p-2 rounded-lg ${entry.sender === 'robot'\r\n                      ? 'bg-blue-100 dark:bg-blue-800/30'\r\n                      : 'bg-gray-200 dark:bg-gray-700/50'\r\n                    }`}>\r\n                    <strong>{entry.sender === 'robot' ? 'ðŸ¤– Robot:' : 'ðŸ‘¤ User:'}</strong> {entry.message}\r\n                    {entry.receiver && entry.receiver !== 'robot' && (\r\n                      <span className=\"ml-2 text-xs text-gray-500\">to {entry.receiver}</span>\r\n                    )}\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n            <div className=\"flex mt-4\">\r\n              <input\r\n                className=\"flex-1 rounded-l-xl px-4 py-2 border border-gray-300 dark:border-gray-700 focus:outline-none\"\r\n                placeholder=\"Ask the robot...\"\r\n                value={userInput}\r\n                onChange={(e) => setUserInput(e.target.value)}\r\n                onKeyDown={(e) => e.key === 'Enter' && handleAsk()}\r\n              />\r\n              <button className=\"btn-primary rounded-r-xl px-4 flex items-center\" onClick={() => handleAsk()}>\r\n                <FiMessageCircle className=\"mr-1\" /> Ask\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}