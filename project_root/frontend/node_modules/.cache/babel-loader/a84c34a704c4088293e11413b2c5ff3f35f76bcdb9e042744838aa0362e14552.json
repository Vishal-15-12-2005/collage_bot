{"ast":null,"code":"var _jsxFileName = \"H:\\\\camera\\\\project_root\\\\frontend\\\\src\\\\pages\\\\RobotController.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { FiCpu } from 'react-icons/fi';\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\nimport { speakWithAudioFeedback, stopSpeaking, startListening, stopListening } from '../utils/voice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nexport default function RobotController() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [recognizedName, setRecognizedName] = useState('');\n  const [lastRecognized, setLastRecognized] = useState('');\n  const [hasGreeted, setHasGreeted] = useState(false);\n  const [collegeName, setCollegeName] = useState('');\n  const [robotMessage, setRobotMessage] = useState('üéì Initializing...');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [volume, setVolume] = useState(0);\n  useEffect(() => {\n    fetchCollegeName();\n    const interval = setInterval(fetchRecognition, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    drawOverlay();\n  }, [recognizedName]);\n  const drawOverlay = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n    const img = videoRef.current;\n    if (!canvas || !ctx || !img) return;\n    canvas.width = img.clientWidth;\n    canvas.height = img.clientHeight;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (recognizedName) {\n      ctx.save();\n      ctx.fillStyle = '#28a745';\n      ctx.font = 'bold 2rem sans-serif';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      ctx.fillText(`üéâ Hello, ${recognizedName}`, canvas.width / 2, 20);\n      ctx.restore();\n    }\n  };\n  const fetchCollegeName = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/college_name`);\n      setCollegeName(res.data.name || 'Your College');\n    } catch {\n      setCollegeName('Unknown College');\n    }\n  };\n  const fetchRecognition = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\n      const {\n        name\n      } = res.data;\n      if (name && name !== 'Unknown') {\n        setRecognizedName(name);\n        drawOverlay();\n        if (name !== lastRecognized) {\n          greetPerson(name);\n          setLastRecognized(name);\n          setHasGreeted(true);\n        }\n      } else {\n        setRecognizedName('');\n        setHasGreeted(false);\n      }\n    } catch (err) {\n      console.error('Recognition fetch failed:', err);\n    }\n  };\n  const greetPerson = name => {\n    const greeting = `Hi ${name}, I'm the college robot assistant from ${collegeName}. How can I help you today?`;\n    stopSpeaking();\n    stopListening();\n    speakWithAudioFeedback(greeting, setVolume, () => {\n      setIsSpeaking(false);\n      startListening(handleTranscript);\n    });\n    setRobotMessage(greeting);\n    setIsSpeaking(true);\n  };\n  const handleTranscript = async (text, isFinal) => {\n    if (!isFinal) return;\n    stopSpeaking();\n    stopListening();\n    setRobotMessage(`üß† Processing: ${text}`);\n    try {\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\n        query: text\n      });\n      const response = res.data.response || \"Sorry, I didn‚Äôt catch that.\";\n      speakWithAudioFeedback(response, setVolume, () => {\n        setIsSpeaking(false);\n        setRobotMessage(response);\n        startListening(handleTranscript);\n      });\n      setRobotMessage(response);\n      setIsSpeaking(true);\n    } catch (err) {\n      console.error('Voice fetch failed:', err);\n      setRobotMessage(\"‚ö†Ô∏è Error reaching assistant.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 fade-in max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-card p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600 text-white\",\n          children: /*#__PURE__*/_jsxDEV(FiCpu, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold gradient-text\",\n            children: \"Robot Controller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 dark:text-gray-300\",\n            children: \"Real-time Vision + Gemini-style Voice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card overflow-hidden relative min-h-[320px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: videoRef,\n          src: `${API_URL}/video_feed`,\n          alt: \"Robot Camera\",\n          className: \"w-full h-auto object-cover rounded-xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute top-0 left-0 w-full h-full pointer-events-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card p-6 flex flex-col justify-center items-center min-h-[320px]\",\n        children: [/*#__PURE__*/_jsxDEV(RobotSpeechDisplay, {\n          message: robotMessage,\n          isSpeaking: isSpeaking,\n          volume: volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-4\",\n          children: \"Listening... Ask anything \\uD83D\\uDC42\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotController, \"XI/kLheOVHZSk2fMYIl/0EG2yVs=\");\n_c = RobotController;\nvar _c;\n$RefreshReg$(_c, \"RobotController\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","FiCpu","RobotSpeechDisplay","speakWithAudioFeedback","stopSpeaking","startListening","stopListening","jsxDEV","_jsxDEV","API_URL","RobotController","_s","videoRef","canvasRef","recognizedName","setRecognizedName","lastRecognized","setLastRecognized","hasGreeted","setHasGreeted","collegeName","setCollegeName","robotMessage","setRobotMessage","isSpeaking","setIsSpeaking","volume","setVolume","fetchCollegeName","interval","setInterval","fetchRecognition","clearInterval","drawOverlay","canvas","current","ctx","getContext","img","width","clientWidth","height","clientHeight","clearRect","save","fillStyle","font","textAlign","textBaseline","fillText","restore","res","get","data","name","greetPerson","err","console","error","greeting","handleTranscript","text","isFinal","post","query","response","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","message","_c","$RefreshReg$"],"sources":["H:/camera/project_root/frontend/src/pages/RobotController.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FiCpu } from 'react-icons/fi';\r\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\r\nimport {\r\n  speakWithAudioFeedback,\r\n  stopSpeaking,\r\n  startListening,\r\n  stopListening\r\n} from '../utils/voice';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nexport default function RobotController() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const [recognizedName, setRecognizedName] = useState('');\r\n  const [lastRecognized, setLastRecognized] = useState('');\r\n  const [hasGreeted, setHasGreeted] = useState(false);\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [robotMessage, setRobotMessage] = useState('üéì Initializing...');\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [volume, setVolume] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchCollegeName();\r\n    const interval = setInterval(fetchRecognition, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    drawOverlay();\r\n  }, [recognizedName]);\r\n\r\n  const drawOverlay = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas?.getContext('2d');\r\n    const img = videoRef.current;\r\n    if (!canvas || !ctx || !img) return;\r\n\r\n    canvas.width = img.clientWidth;\r\n    canvas.height = img.clientHeight;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    if (recognizedName) {\r\n      ctx.save();\r\n      ctx.fillStyle = '#28a745';\r\n      ctx.font = 'bold 2rem sans-serif';\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'top';\r\n      ctx.fillText(`üéâ Hello, ${recognizedName}`, canvas.width / 2, 20);\r\n      ctx.restore();\r\n    }\r\n  };\r\n\r\n  const fetchCollegeName = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/college_name`);\r\n      setCollegeName(res.data.name || 'Your College');\r\n    } catch {\r\n      setCollegeName('Unknown College');\r\n    }\r\n  };\r\n\r\n  const fetchRecognition = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\r\n      const { name } = res.data;\r\n\r\n      if (name && name !== 'Unknown') {\r\n        setRecognizedName(name);\r\n        drawOverlay();\r\n\r\n        if (name !== lastRecognized) {\r\n          greetPerson(name);\r\n          setLastRecognized(name);\r\n          setHasGreeted(true);\r\n        }\r\n      } else {\r\n        setRecognizedName('');\r\n        setHasGreeted(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Recognition fetch failed:', err);\r\n    }\r\n  };\r\n\r\n  const greetPerson = (name) => {\r\n    const greeting = `Hi ${name}, I'm the college robot assistant from ${collegeName}. How can I help you today?`;\r\n\r\n    stopSpeaking();\r\n    stopListening();\r\n\r\n    speakWithAudioFeedback(greeting, setVolume, () => {\r\n      setIsSpeaking(false);\r\n      startListening(handleTranscript);\r\n    });\r\n\r\n    setRobotMessage(greeting);\r\n    setIsSpeaking(true);\r\n  };\r\n\r\n  const handleTranscript = async (text, isFinal) => {\r\n    if (!isFinal) return;\r\n\r\n    stopSpeaking();\r\n    stopListening();\r\n\r\n    setRobotMessage(`üß† Processing: ${text}`);\r\n    try {\r\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\r\n        query: text,\r\n      });\r\n\r\n      const response = res.data.response || \"Sorry, I didn‚Äôt catch that.\";\r\n      speakWithAudioFeedback(response, setVolume, () => {\r\n        setIsSpeaking(false);\r\n        setRobotMessage(response);\r\n        startListening(handleTranscript);\r\n      });\r\n      setRobotMessage(response);\r\n      setIsSpeaking(true);\r\n    } catch (err) {\r\n      console.error('Voice fetch failed:', err);\r\n      setRobotMessage(\"‚ö†Ô∏è Error reaching assistant.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6 fade-in max-w-5xl mx-auto\">\r\n      <div className=\"glass-card p-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600 text-white\">\r\n            <FiCpu size={24} />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold gradient-text\">Robot Controller</h1>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">\r\n              Real-time Vision + Gemini-style Voice\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Camera Feed */}\r\n        <div className=\"glass-card overflow-hidden relative min-h-[320px]\">\r\n          <img\r\n            ref={videoRef}\r\n            src={`${API_URL}/video_feed`}\r\n            alt=\"Robot Camera\"\r\n            className=\"w-full h-auto object-cover rounded-xl\"\r\n          />\r\n          <canvas\r\n            ref={canvasRef}\r\n            className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\r\n          />\r\n        </div>\r\n\r\n        {/* Robot Speech Avatar */}\r\n        <div className=\"glass-card p-6 flex flex-col justify-center items-center min-h-[320px]\">\r\n          <RobotSpeechDisplay\r\n            message={robotMessage}\r\n            isSpeaking={isSpeaking}\r\n            volume={volume}\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-4\">\r\n            Listening... Ask anything üëÇ\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}