{"ast":null,"code":"var _jsxFileName = \"H:\\\\camera\\\\project_root\\\\frontend\\\\src\\\\pages\\\\RobotController.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { FiCpu, FiMic } from 'react-icons/fi';\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\nimport { speakWithAudioFeedback } from '../utils/voice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nexport default function RobotController() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [recognizedName, setRecognizedName] = useState('');\n  const [collegeName, setCollegeName] = useState('');\n  const [robotMessage, setRobotMessage] = useState('🎓 Initializing...');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [volume, setVolume] = useState(0);\n  const [lastTimestamp, setLastTimestamp] = useState(0);\n  const [lastSpokenName, setLastSpokenName] = useState('');\n  const [micReady, setMicReady] = useState(false);\n  const fetchCollegeName = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/college_name`);\n      setCollegeName(res.data.name || 'Your College');\n    } catch {\n      setCollegeName('Your College');\n    }\n  };\n  const fetchRecognition = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\n      const {\n        name,\n        timestamp\n      } = res.data;\n      if (timestamp === lastTimestamp) return;\n      setLastTimestamp(timestamp);\n\n      // Greet only on new name change\n      if (name && name !== 'Unknown' && name !== recognizedName) {\n        const greet = `Hi ${name}, I am the robot assistant of ${collegeName}. How can I help you today?`;\n        speakOnceThenListen(greet);\n        setRecognizedName(name);\n        setLastSpokenName(name);\n        setRobotMessage(greet);\n      } else if ((name === 'Unknown' || !name) && lastSpokenName !== 'Unknown') {\n        const unknownGreet = `Hello! I am CollegeBot at ${collegeName}. How can I help you?`;\n        speakOnceThenListen(unknownGreet);\n        setRecognizedName('');\n        setLastSpokenName('Unknown');\n        setRobotMessage(unknownGreet);\n      }\n    } catch (err) {\n      console.error('Recognition fetch failed:', err);\n    }\n  };\n  const speakOnceThenListen = text => {\n    setIsSpeaking(true);\n    speakWithAudioFeedback(text, setVolume, () => {\n      setIsSpeaking(false);\n      setVolume(0);\n      setMicReady(true); // 🔄 Auto trigger mic after speech ends\n    });\n  };\n  const handleMicListen = async () => {\n    if (!micReady || isSpeaking) return;\n    setMicReady(false); // only once per trigger\n    setRobotMessage('🎤 Listening...');\n    try {\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\n        query: 'listen_voice'\n      });\n      const answer = res.data.response || \"Sorry, I didn't catch that.\";\n      speakOnceThenListen(answer);\n      setRobotMessage(answer);\n    } catch {\n      setRobotMessage(\"❌ Couldn't reach assistant.\");\n    }\n  };\n  const drawOverlay = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n    const img = videoRef.current;\n    if (!canvas || !ctx || !img) return;\n    canvas.width = img.clientWidth;\n    canvas.height = img.clientHeight;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    ctx.fillStyle = recognizedName ? '#28a745' : '#d63384';\n    ctx.font = 'bold 1.5rem sans-serif';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    ctx.fillText(recognizedName ? `🎉 Hello, ${recognizedName}` : '🤖 Face Not Recognized', canvas.width / 2, 20);\n    ctx.restore();\n  };\n  useEffect(() => {\n    fetchCollegeName();\n    const interval = setInterval(fetchRecognition, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    if (micReady && !isSpeaking) {\n      handleMicListen();\n    }\n  }, [micReady, isSpeaking]);\n  useEffect(() => {\n    drawOverlay();\n    const obs = new ResizeObserver(drawOverlay);\n    if (videoRef.current) obs.observe(videoRef.current);\n    return () => obs.disconnect();\n  }, [recognizedName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-5xl mx-auto p-4 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-card p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(FiCpu, {\n          size: 24,\n          className: \"text-white p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold gradient-text\",\n            children: \"Robot Controller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Vision + Voice integrated robot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card overflow-hidden relative h-[450px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: videoRef,\n          src: `${API_URL}/video_feed`,\n          alt: \"Robot Camera\",\n          className: \"absolute inset-0 w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute top-0 left-0 w-full h-full pointer-events-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card p-6 flex flex-col justify-between h-[450px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FiMic, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), \" Assistant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RobotSpeechDisplay, {\n          message: robotMessage,\n          isSpeaking: isSpeaking,\n          volume: volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"College: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: collegeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Mic: \", isSpeaking ? '🔊 Speaking' : micReady ? '🎤 Listening' : 'Idle']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotController, \"1jscRRNwo11HoE21EGKYZgpjsBA=\");\n_c = RobotController;\nvar _c;\n$RefreshReg$(_c, \"RobotController\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","FiCpu","FiMic","RobotSpeechDisplay","speakWithAudioFeedback","jsxDEV","_jsxDEV","API_URL","RobotController","_s","videoRef","canvasRef","recognizedName","setRecognizedName","collegeName","setCollegeName","robotMessage","setRobotMessage","isSpeaking","setIsSpeaking","volume","setVolume","lastTimestamp","setLastTimestamp","lastSpokenName","setLastSpokenName","micReady","setMicReady","fetchCollegeName","res","get","data","name","fetchRecognition","timestamp","greet","speakOnceThenListen","unknownGreet","err","console","error","text","handleMicListen","post","query","answer","response","drawOverlay","canvas","current","ctx","getContext","img","width","clientWidth","height","clientHeight","clearRect","save","fillStyle","font","textAlign","textBaseline","fillText","restore","interval","setInterval","clearInterval","obs","ResizeObserver","observe","disconnect","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","message","_c","$RefreshReg$"],"sources":["H:/camera/project_root/frontend/src/pages/RobotController.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FiCpu, FiMic } from 'react-icons/fi';\r\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\r\nimport { speakWithAudioFeedback } from '../utils/voice';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nexport default function RobotController() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const [recognizedName, setRecognizedName] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [robotMessage, setRobotMessage] = useState('🎓 Initializing...');\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [volume, setVolume] = useState(0);\r\n  const [lastTimestamp, setLastTimestamp] = useState(0);\r\n  const [lastSpokenName, setLastSpokenName] = useState('');\r\n  const [micReady, setMicReady] = useState(false);\r\n\r\n  const fetchCollegeName = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/college_name`);\r\n      setCollegeName(res.data.name || 'Your College');\r\n    } catch {\r\n      setCollegeName('Your College');\r\n    }\r\n  };\r\n\r\n  const fetchRecognition = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\r\n      const { name, timestamp } = res.data;\r\n\r\n      if (timestamp === lastTimestamp) return;\r\n      setLastTimestamp(timestamp);\r\n\r\n      // Greet only on new name change\r\n      if (name && name !== 'Unknown' && name !== recognizedName) {\r\n        const greet = `Hi ${name}, I am the robot assistant of ${collegeName}. How can I help you today?`;\r\n        speakOnceThenListen(greet);\r\n        setRecognizedName(name);\r\n        setLastSpokenName(name);\r\n        setRobotMessage(greet);\r\n      } else if ((name === 'Unknown' || !name) && lastSpokenName !== 'Unknown') {\r\n        const unknownGreet = `Hello! I am CollegeBot at ${collegeName}. How can I help you?`;\r\n        speakOnceThenListen(unknownGreet);\r\n        setRecognizedName('');\r\n        setLastSpokenName('Unknown');\r\n        setRobotMessage(unknownGreet);\r\n      }\r\n    } catch (err) {\r\n      console.error('Recognition fetch failed:', err);\r\n    }\r\n  };\r\n\r\n  const speakOnceThenListen = (text) => {\r\n    setIsSpeaking(true);\r\n    speakWithAudioFeedback(text, setVolume, () => {\r\n      setIsSpeaking(false);\r\n      setVolume(0);\r\n      setMicReady(true); // 🔄 Auto trigger mic after speech ends\r\n    });\r\n  };\r\n\r\n  const handleMicListen = async () => {\r\n    if (!micReady || isSpeaking) return;\r\n    setMicReady(false); // only once per trigger\r\n    setRobotMessage('🎤 Listening...');\r\n    try {\r\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\r\n        query: 'listen_voice',\r\n      });\r\n      const answer = res.data.response || \"Sorry, I didn't catch that.\";\r\n      speakOnceThenListen(answer);\r\n      setRobotMessage(answer);\r\n    } catch {\r\n      setRobotMessage(\"❌ Couldn't reach assistant.\");\r\n    }\r\n  };\r\n\r\n  const drawOverlay = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas?.getContext('2d');\r\n    const img = videoRef.current;\r\n    if (!canvas || !ctx || !img) return;\r\n\r\n    canvas.width = img.clientWidth;\r\n    canvas.height = img.clientHeight;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.save();\r\n    ctx.fillStyle = recognizedName ? '#28a745' : '#d63384';\r\n    ctx.font = 'bold 1.5rem sans-serif';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'top';\r\n    ctx.fillText(\r\n      recognizedName ? `🎉 Hello, ${recognizedName}` : '🤖 Face Not Recognized',\r\n      canvas.width / 2,\r\n      20\r\n    );\r\n    ctx.restore();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCollegeName();\r\n    const interval = setInterval(fetchRecognition, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (micReady && !isSpeaking) {\r\n      handleMicListen();\r\n    }\r\n  }, [micReady, isSpeaking]);\r\n\r\n  useEffect(() => {\r\n    drawOverlay();\r\n    const obs = new ResizeObserver(drawOverlay);\r\n    if (videoRef.current) obs.observe(videoRef.current);\r\n    return () => obs.disconnect();\r\n  }, [recognizedName]);\r\n\r\n  return (\r\n    <div className=\"max-w-5xl mx-auto p-4 space-y-6\">\r\n      <div className=\"glass-card p-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <FiCpu size={24} className=\"text-white p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600\" />\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold gradient-text\">Robot Controller</h1>\r\n            <p className=\"text-gray-600\">Vision + Voice integrated robot</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Camera */}\r\n        <div className=\"glass-card overflow-hidden relative h-[450px]\">\r\n          <img\r\n            ref={videoRef}\r\n            src={`${API_URL}/video_feed`}\r\n            alt=\"Robot Camera\"\r\n            className=\"absolute inset-0 w-full h-full object-cover\"\r\n          />\r\n          <canvas\r\n            ref={canvasRef}\r\n            className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\r\n          />\r\n        </div>\r\n\r\n        {/* Robot Speech */}\r\n        <div className=\"glass-card p-6 flex flex-col justify-between h-[450px]\">\r\n          <h2 className=\"text-xl font-bold flex items-center\">\r\n            <FiMic className=\"mr-2\" /> Assistant\r\n          </h2>\r\n          <RobotSpeechDisplay\r\n            message={robotMessage}\r\n            isSpeaking={isSpeaking}\r\n            volume={volume}\r\n          />\r\n          <div className=\"text-sm flex justify-between\">\r\n            <span>College: <strong>{collegeName}</strong></span>\r\n            <span>Mic: {isSpeaking ? '🔊 Speaking' : micReady ? '🎤 Listening' : 'Idle'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}