{"ast":null,"code":"var _jsxFileName = \"H:\\\\camera\\\\project_root\\\\frontend\\\\src\\\\pages\\\\RobotController.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { FiCpu, FiMic } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nexport default function RobotController() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [recognizedName, setRecognizedName] = useState('');\n  const [collegeName, setCollegeName] = useState('');\n  const [robotMessage, setRobotMessage] = useState('');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  useEffect(() => {\n    fetchCollegeName();\n    const interval = setInterval(fetchRecognition, 1500);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const drawOverlay = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n      const img = videoRef.current;\n      if (!canvas || !ctx || !img) return;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      if (!recognizedName) {\n        ctx.save();\n        ctx.globalAlpha = 0.7;\n        ctx.fillStyle = '#222';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.globalAlpha = 1;\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 2rem sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('No face recognized', canvas.width / 2, canvas.height / 2);\n        ctx.restore();\n      }\n    };\n    drawOverlay();\n    const img = videoRef.current;\n    let observer;\n    if (img && window.ResizeObserver) {\n      observer = new window.ResizeObserver(drawOverlay);\n      observer.observe(img);\n    }\n    if (videoRef.current) videoRef.current._drawOverlay = drawOverlay;\n    return () => {\n      if (observer && img) observer.unobserve(img);\n      if (videoRef.current && videoRef.current._drawOverlay) delete videoRef.current._drawOverlay;\n    };\n  }, [recognizedName]);\n  const fetchCollegeName = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/college`);\n      setCollegeName(res.data.name || 'Your College');\n    } catch (error) {\n      setCollegeName('Error: Could not load college name');\n      console.error('Failed to load college name', error);\n    }\n  };\n  const fetchRecognition = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/last_recognition`);\n      const {\n        name\n      } = res.data;\n      if (name && name !== recognizedName) {\n        setRecognizedName(name);\n        const message = `Hi ${name}, I am the robot assistant of ${collegeName}. How can I help you today?`;\n        speak(message);\n        setRobotMessage(message);\n        logChat(name, message);\n      } else if (!name) {\n        setRecognizedName('');\n        setRobotMessage('');\n      }\n    } catch (err) {\n      setRobotMessage('Error: Unable to connect to backend.');\n      setRecognizedName('');\n      console.error('Recognition fetch failed:', err);\n    }\n  };\n  const speak = text => {\n    const synth = window.speechSynthesis;\n    const utterance = new window.SpeechSynthesisUtterance(text);\n    utterance.lang = 'en-US';\n    synth.speak(utterance);\n    setIsSpeaking(true);\n    utterance.onend = () => setIsSpeaking(false);\n  };\n  const logChat = async (user, msg) => {\n    try {\n      await axios.post(`${API_URL}/api/chatlog`, {\n        sender: 'robot',\n        receiver: user,\n        message: msg\n      });\n    } catch (err) {\n      console.error('Failed to log chat:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 fade-in max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-card p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600 text-white\",\n          children: /*#__PURE__*/_jsxDEV(FiCpu, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold gradient-text\",\n            children: \"Robot Assistant Interface\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 dark:text-gray-300\",\n            children: \"Simulated robot behavior with voice and vision\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card overflow-hidden relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: videoRef,\n          src: \"http://localhost:5000/video_feed\",\n          alt: \"Robot Camera\",\n          className: \"w-full h-auto rounded-xl\",\n          onLoad: () => {\n            if (videoRef.current && videoRef.current._drawOverlay) {\n              videoRef.current._drawOverlay();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute top-0 left-0 w-full h-full pointer-events-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card p-6 flex flex-col justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiMic, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), \" Robot Canvas Display\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-800 dark:text-gray-200 whitespace-pre-wrap\",\n            children: robotMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-sm text-gray-600 dark:text-gray-300\",\n          children: [\"College: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: collegeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotController, \"j0uGTe/jGtgUOGKugvt2ZEEf3gE=\");\n_c = RobotController;\nvar _c;\n$RefreshReg$(_c, \"RobotController\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","FiCpu","FiMic","jsxDEV","_jsxDEV","API_URL","RobotController","_s","videoRef","canvasRef","recognizedName","setRecognizedName","collegeName","setCollegeName","robotMessage","setRobotMessage","isSpeaking","setIsSpeaking","fetchCollegeName","interval","setInterval","fetchRecognition","clearInterval","drawOverlay","canvas","current","ctx","getContext","img","width","height","clearRect","save","globalAlpha","fillStyle","fillRect","font","textAlign","textBaseline","fillText","restore","observer","window","ResizeObserver","observe","_drawOverlay","unobserve","res","get","data","name","error","console","message","speak","logChat","err","text","synth","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","onend","user","msg","post","sender","receiver","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","onLoad","_c","$RefreshReg$"],"sources":["H:/camera/project_root/frontend/src/pages/RobotController.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FiCpu, FiMic } from 'react-icons/fi';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nexport default function RobotController() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const [recognizedName, setRecognizedName] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [robotMessage, setRobotMessage] = useState('');\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchCollegeName();\r\n    const interval = setInterval(fetchRecognition, 1500);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const drawOverlay = () => {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas?.getContext('2d');\r\n      const img = videoRef.current;\r\n      if (!canvas || !ctx || !img) return;\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      if (!recognizedName) {\r\n        ctx.save();\r\n        ctx.globalAlpha = 0.7;\r\n        ctx.fillStyle = '#222';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.globalAlpha = 1;\r\n        ctx.fillStyle = '#fff';\r\n        ctx.font = 'bold 2rem sans-serif';\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillText('No face recognized', canvas.width / 2, canvas.height / 2);\r\n        ctx.restore();\r\n      }\r\n    };\r\n\r\n    drawOverlay();\r\n\r\n    const img = videoRef.current;\r\n    let observer;\r\n    if (img && window.ResizeObserver) {\r\n      observer = new window.ResizeObserver(drawOverlay);\r\n      observer.observe(img);\r\n    }\r\n    if (videoRef.current) videoRef.current._drawOverlay = drawOverlay;\r\n\r\n    return () => {\r\n      if (observer && img) observer.unobserve(img);\r\n      if (videoRef.current && videoRef.current._drawOverlay) delete videoRef.current._drawOverlay;\r\n    };\r\n  }, [recognizedName]);\r\n\r\n  const fetchCollegeName = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/college`);\r\n      setCollegeName(res.data.name || 'Your College');\r\n    } catch (error) {\r\n      setCollegeName('Error: Could not load college name');\r\n      console.error('Failed to load college name', error);\r\n    }\r\n  };\r\n\r\n  const fetchRecognition = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/last_recognition`);\r\n      const { name } = res.data;\r\n      if (name && name !== recognizedName) {\r\n        setRecognizedName(name);\r\n        const message = `Hi ${name}, I am the robot assistant of ${collegeName}. How can I help you today?`;\r\n        speak(message);\r\n        setRobotMessage(message);\r\n        logChat(name, message);\r\n      } else if (!name) {\r\n        setRecognizedName('');\r\n        setRobotMessage('');\r\n      }\r\n    } catch (err) {\r\n      setRobotMessage('Error: Unable to connect to backend.');\r\n      setRecognizedName('');\r\n      console.error('Recognition fetch failed:', err);\r\n    }\r\n  };\r\n\r\n  const speak = (text) => {\r\n    const synth = window.speechSynthesis;\r\n    const utterance = new window.SpeechSynthesisUtterance(text);\r\n    utterance.lang = 'en-US';\r\n    synth.speak(utterance);\r\n    setIsSpeaking(true);\r\n    utterance.onend = () => setIsSpeaking(false);\r\n  };\r\n\r\n  const logChat = async (user, msg) => {\r\n    try {\r\n      await axios.post(`${API_URL}/api/chatlog`, {\r\n        sender: 'robot',\r\n        receiver: user,\r\n        message: msg,\r\n      });\r\n    } catch (err) {\r\n      console.error('Failed to log chat:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6 fade-in max-w-5xl mx-auto\">\r\n      <div className=\"glass-card p-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600 text-white\">\r\n            <FiCpu size={24} />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold gradient-text\">Robot Assistant Interface</h1>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">Simulated robot behavior with voice and vision</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Video Feed */}\r\n        <div className=\"glass-card overflow-hidden relative\">\r\n          <img\r\n            ref={videoRef}\r\n            src=\"http://localhost:5000/video_feed\"\r\n            alt=\"Robot Camera\"\r\n            className=\"w-full h-auto rounded-xl\"\r\n            onLoad={() => {\r\n              if (videoRef.current && videoRef.current._drawOverlay) {\r\n                videoRef.current._drawOverlay();\r\n              }\r\n            }}\r\n          />\r\n          <canvas ref={canvasRef} className=\"absolute top-0 left-0 w-full h-full pointer-events-none\" />\r\n        </div>\r\n\r\n        {/* Robot Display */}\r\n        <div className=\"glass-card p-6 flex flex-col justify-between\">\r\n          <div>\r\n            <h2 className=\"text-xl font-bold mb-4 flex items-center\">\r\n              <FiMic className=\"mr-2\" /> Robot Canvas Display\r\n            </h2>\r\n            <div className=\"text-gray-800 dark:text-gray-200 whitespace-pre-wrap\">{robotMessage}</div>\r\n          </div>\r\n          <div className=\"mt-4 text-sm text-gray-600 dark:text-gray-300\">\r\n            College: <span className=\"font-semibold\">{collegeName}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}