{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Add interceptor to include username and role headers\nAPI.interceptors.request.use(config => {\n  const username = localStorage.getItem('username') || 'unknown';\n  const role = localStorage.getItem('role') || 'user';\n  config.headers['X-Username'] = username;\n  config.headers['X-Role'] = role;\n  return config;\n});\n\n// Student/Staff\nexport const fetchStudents = () => API.get('/students');\nexport const fetchStaff = () => API.get('/staff');\n\n// Face Recognition\nexport const fetchRecognizedFace = () => API.get('/recognized_face');\nexport const fetchUnknowns = () => API.get('/unknowns');\nexport const enrollFace = (filename, data) => API.post(`/enroll/${filename}`, data);\n\n// Upload & Logs\nexport const uploadImage = data => API.post('/upload', data);\nexport const fetchLogs = () => API.get('/logs');\n\n// College Info\nexport const fetchCollegeInfo = () => API.get('/college_info');\nexport const addCollegeInfo = data => API.post('/college_info', data);\nexport const updateCollegeInfo = (id, data) => API.put(`/college_info/${id}`, data);\nexport const deleteCollegeInfo = id => API.delete(`/college_info/${id}`);\n\n// Q&A / Voice\nexport const askRobotInfo = question => API.get(`/info?question=${encodeURIComponent(question)}`);\nexport const triggerVoiceAssistant = () => API.post('/robot_ask', {\n  query: 'listen_voice'\n});\nexport const robotAsk = query => API.post('/robot_ask', {\n  query\n});\n\n// Recognition Greet\nexport const fetchCollegeName = () => API.get('/college_name');\nexport const logChat = payload => API.post('/chat_log', payload);\n\n// ✅ Chat Logs\n\nexport const fetchLiveChatLogs = () => API.get('/live_chat');\nexport const clearLiveChatLogs = () => API.post('/live_chat/clear');\nexport const deleteLiveChatLog = id => API.delete(`/live_chat/${id}`);\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","username","localStorage","getItem","role","headers","fetchStudents","get","fetchStaff","fetchRecognizedFace","fetchUnknowns","enrollFace","filename","data","post","uploadImage","fetchLogs","fetchCollegeInfo","addCollegeInfo","updateCollegeInfo","id","put","deleteCollegeInfo","delete","askRobotInfo","question","encodeURIComponent","triggerVoiceAssistant","query","robotAsk","fetchCollegeName","logChat","payload","fetchLiveChatLogs","clearLiveChatLogs","deleteLiveChatLog"],"sources":["D:/project_root/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n});\r\n\r\n// Add interceptor to include username and role headers\r\nAPI.interceptors.request.use((config) => {\r\n  const username = localStorage.getItem('username') || 'unknown';\r\n  const role = localStorage.getItem('role') || 'user';\r\n  config.headers['X-Username'] = username;\r\n  config.headers['X-Role'] = role;\r\n  return config;\r\n});\r\n\r\n// Student/Staff\r\nexport const fetchStudents = () => API.get('/students');\r\nexport const fetchStaff = () => API.get('/staff');\r\n\r\n// Face Recognition\r\nexport const fetchRecognizedFace = () => API.get('/recognized_face');\r\nexport const fetchUnknowns = () => API.get('/unknowns');\r\nexport const enrollFace = (filename, data) => API.post(`/enroll/${filename}`, data);\r\n\r\n// Upload & Logs\r\nexport const uploadImage = (data) => API.post('/upload', data);\r\nexport const fetchLogs = () => API.get('/logs');\r\n\r\n// College Info\r\nexport const fetchCollegeInfo = () => API.get('/college_info');\r\nexport const addCollegeInfo = (data) => API.post('/college_info', data);\r\nexport const updateCollegeInfo = (id, data) => API.put(`/college_info/${id}`, data);\r\nexport const deleteCollegeInfo = (id) => API.delete(`/college_info/${id}`);\r\n\r\n// Q&A / Voice\r\nexport const askRobotInfo = (question) => API.get(`/info?question=${encodeURIComponent(question)}`);\r\nexport const triggerVoiceAssistant = () => API.post('/robot_ask', { query: 'listen_voice' });\r\nexport const robotAsk = (query) => API.post('/robot_ask', { query });\r\n\r\n// Recognition Greet\r\nexport const fetchCollegeName = () => API.get('/college_name');\r\nexport const logChat = (payload) => API.post('/chat_log', payload);\r\n\r\n// ✅ Chat Logs\r\n\r\nexport const fetchLiveChatLogs = () => API.get('/live_chat');\r\nexport const clearLiveChatLogs = () => API.post('/live_chat/clear');\r\nexport const deleteLiveChatLog = (id) => API.delete(`/live_chat/${id}`);\r\nexport default API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}