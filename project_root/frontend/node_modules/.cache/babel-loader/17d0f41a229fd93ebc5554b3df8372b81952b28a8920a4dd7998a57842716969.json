{"ast":null,"code":"export const startListening = onTranscript => {\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  if (!SpeechRecognition) return console.warn('SpeechRecognition not supported');\n  const recognition = new SpeechRecognition();\n  recognition.lang = 'en-US';\n  recognition.continuous = true;\n  recognition.interimResults = false;\n  recognition.onresult = event => {\n    const transcript = event.results[event.results.length - 1][0].transcript.trim();\n    if (transcript) onTranscript(transcript);\n  };\n  recognition.onerror = err => {\n    console.error('SpeechRecognition error:', err);\n  };\n  recognition.start();\n};\nexport const stopListening = () => {\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  if (SpeechRecognition) {\n    const rec = new SpeechRecognition();\n    rec.stop();\n  }\n};","map":{"version":3,"names":["startListening","onTranscript","SpeechRecognition","window","webkitSpeechRecognition","console","warn","recognition","lang","continuous","interimResults","onresult","event","transcript","results","length","trim","onerror","err","error","start","stopListening","rec","stop"],"sources":["H:/camera/project_root/frontend/src/utils/speechRecognition.js"],"sourcesContent":["export const startListening = (onTranscript) => {\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  if (!SpeechRecognition) return console.warn('SpeechRecognition not supported');\r\n\r\n  const recognition = new SpeechRecognition();\r\n  recognition.lang = 'en-US';\r\n  recognition.continuous = true;\r\n  recognition.interimResults = false;\r\n\r\n  recognition.onresult = (event) => {\r\n    const transcript = event.results[event.results.length - 1][0].transcript.trim();\r\n    if (transcript) onTranscript(transcript);\r\n  };\r\n\r\n  recognition.onerror = (err) => {\r\n    console.error('SpeechRecognition error:', err);\r\n  };\r\n\r\n  recognition.start();\r\n};\r\n\r\nexport const stopListening = () => {\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  if (SpeechRecognition) {\r\n    const rec = new SpeechRecognition();\r\n    rec.stop();\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,YAAY,IAAK;EAC9C,MAAMC,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;EACpF,IAAI,CAACF,iBAAiB,EAAE,OAAOG,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;EAE9E,MAAMC,WAAW,GAAG,IAAIL,iBAAiB,CAAC,CAAC;EAC3CK,WAAW,CAACC,IAAI,GAAG,OAAO;EAC1BD,WAAW,CAACE,UAAU,GAAG,IAAI;EAC7BF,WAAW,CAACG,cAAc,GAAG,KAAK;EAElCH,WAAW,CAACI,QAAQ,GAAIC,KAAK,IAAK;IAChC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAACF,KAAK,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,UAAU,CAACG,IAAI,CAAC,CAAC;IAC/E,IAAIH,UAAU,EAAEZ,YAAY,CAACY,UAAU,CAAC;EAC1C,CAAC;EAEDN,WAAW,CAACU,OAAO,GAAIC,GAAG,IAAK;IAC7Bb,OAAO,CAACc,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAAC;EAChD,CAAC;EAEDX,WAAW,CAACa,KAAK,CAAC,CAAC;AACrB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAMnB,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;EACpF,IAAIF,iBAAiB,EAAE;IACrB,MAAMoB,GAAG,GAAG,IAAIpB,iBAAiB,CAAC,CAAC;IACnCoB,GAAG,CAACC,IAAI,CAAC,CAAC;EACZ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}