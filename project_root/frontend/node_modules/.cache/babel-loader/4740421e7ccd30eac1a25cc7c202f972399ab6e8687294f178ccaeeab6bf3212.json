{"ast":null,"code":"var _jsxFileName = \"H:\\\\camera\\\\collage_bot\\\\project_root\\\\frontend\\\\src\\\\components\\\\AnimatedBackground.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const particlesRef = useRef([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Particle system\n    const particleCount = 50;\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.vx = (Math.random() - 0.5) * 0.5;\n        this.vy = (Math.random() - 0.5) * 0.5;\n        this.size = Math.random() * 3 + 1;\n        this.opacity = Math.random() * 0.5 + 0.1;\n        this.color = `hsl(${Math.random() * 60 + 200}, 70%, 70%)`; // Bright for dark bg\n      }\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // Wrap around edges\n        if (this.x < 0) this.x = canvas.width;\n        if (this.x > canvas.width) this.x = 0;\n        if (this.y < 0) this.y = canvas.height;\n        if (this.y > canvas.height) this.y = 0;\n      }\n      draw() {\n        ctx.save();\n        ctx.globalAlpha = this.opacity;\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    // Create particles\n    for (let i = 0; i < particleCount; i++) {\n      particlesRef.current.push(new Particle());\n    }\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const particles = particlesRef.current;\n      particles.forEach(p => {\n        p.update();\n        p.draw();\n      });\n\n      // Draw connections\n      particles.forEach((p1, i) => {\n        for (let j = i + 1; j < particles.length; j++) {\n          const p2 = particles[j];\n          const dx = p1.x - p2.x;\n          const dy = p1.y - p2.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 100) {\n            ctx.save();\n            ctx.globalAlpha = (100 - distance) / 100 * 0.3;\n            ctx.strokeStyle = '#60a5fa'; // Tailwind blue-400 for dark theme\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n          }\n        }\n      });\n      requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"fixed inset-0 pointer-events-none z-0\",\n    style: {\n      opacity: 0.3,\n      backgroundColor: 'transparent'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBackground, \"MRG50IHlLOXIrb5kwOzykF5IYDg=\");\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","AnimatedBackground","_s","canvasRef","particlesRef","canvas","current","ctx","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","particleCount","Particle","constructor","x","Math","random","y","vx","vy","size","opacity","color","update","draw","save","globalAlpha","fillStyle","beginPath","arc","PI","fill","restore","i","push","animate","clearRect","particles","forEach","p","p1","j","length","p2","dx","dy","distance","sqrt","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame","removeEventListener","ref","className","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/camera/collage_bot/project_root/frontend/src/components/AnimatedBackground.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst AnimatedBackground = () => {\r\n  const canvasRef = useRef(null);\r\n  const particlesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Set canvas size\r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    };\r\n\r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    // Particle system\r\n    const particleCount = 50;\r\n\r\n    class Particle {\r\n      constructor() {\r\n        this.x = Math.random() * canvas.width;\r\n        this.y = Math.random() * canvas.height;\r\n        this.vx = (Math.random() - 0.5) * 0.5;\r\n        this.vy = (Math.random() - 0.5) * 0.5;\r\n        this.size = Math.random() * 3 + 1;\r\n        this.opacity = Math.random() * 0.5 + 0.1;\r\n        this.color = `hsl(${Math.random() * 60 + 200}, 70%, 70%)`; // Bright for dark bg\r\n      }\r\n\r\n      update() {\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n\r\n        // Wrap around edges\r\n        if (this.x < 0) this.x = canvas.width;\r\n        if (this.x > canvas.width) this.x = 0;\r\n        if (this.y < 0) this.y = canvas.height;\r\n        if (this.y > canvas.height) this.y = 0;\r\n      }\r\n\r\n      draw() {\r\n        ctx.save();\r\n        ctx.globalAlpha = this.opacity;\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    // Create particles\r\n    for (let i = 0; i < particleCount; i++) {\r\n      particlesRef.current.push(new Particle());\r\n    }\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const particles = particlesRef.current;\r\n\r\n      particles.forEach(p => {\r\n        p.update();\r\n        p.draw();\r\n      });\r\n\r\n      // Draw connections\r\n      particles.forEach((p1, i) => {\r\n        for (let j = i + 1; j < particles.length; j++) {\r\n          const p2 = particles[j];\r\n          const dx = p1.x - p2.x;\r\n          const dy = p1.y - p2.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n          if (distance < 100) {\r\n            ctx.save();\r\n            ctx.globalAlpha = (100 - distance) / 100 * 0.3;\r\n            ctx.strokeStyle = '#60a5fa'; // Tailwind blue-400 for dark theme\r\n            ctx.lineWidth = 1;\r\n            ctx.beginPath();\r\n            ctx.moveTo(p1.x, p1.y);\r\n            ctx.lineTo(p2.x, p2.y);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n          }\r\n        }\r\n      });\r\n\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"fixed inset-0 pointer-events-none z-0\"\r\n      style={{ opacity: 0.3, backgroundColor: 'transparent' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}