{"ast":null,"code":"// chat_logger.js\n// Utility for logging chat messages to backend\n\nimport API from './api';\nexport async function logChat({\n  sender,\n  receiver,\n  message,\n  timestamp = null\n}) {\n  try {\n    const data = {\n      sender,\n      receiver,\n      message,\n      timestamp: timestamp || new Date().toISOString()\n    };\n    await API.post('/api/chat_log', data);\n  } catch (err) {\n    // Optionally handle/log error\n    // console.error('Failed to log chat:', err);\n  }\n}","map":{"version":3,"names":["API","logChat","sender","receiver","message","timestamp","data","Date","toISOString","post","err"],"sources":["H:/camera/frontend/src/utils/chat_logger.js"],"sourcesContent":["// chat_logger.js\r\n// Utility for logging chat messages to backend\r\n\r\nimport API from './api';\r\n\r\nexport async function logChat({ sender, receiver, message, timestamp = null }) {\r\n  try {\r\n    const data = {\r\n      sender,\r\n      receiver,\r\n      message,\r\n      timestamp: timestamp || new Date().toISOString(),\r\n    };\r\n    await API.post('/api/chat_log', data);\r\n  } catch (err) {\r\n    // Optionally handle/log error\r\n    // console.error('Failed to log chat:', err);\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;;AAEA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,eAAeC,OAAOA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,SAAS,GAAG;AAAK,CAAC,EAAE;EAC7E,IAAI;IACF,MAAMC,IAAI,GAAG;MACXJ,MAAM;MACNC,QAAQ;MACRC,OAAO;MACPC,SAAS,EAAEA,SAAS,IAAI,IAAIE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACjD,CAAC;IACD,MAAMR,GAAG,CAACS,IAAI,CAAC,eAAe,EAAEH,IAAI,CAAC;EACvC,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZ;IACA;EAAA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}