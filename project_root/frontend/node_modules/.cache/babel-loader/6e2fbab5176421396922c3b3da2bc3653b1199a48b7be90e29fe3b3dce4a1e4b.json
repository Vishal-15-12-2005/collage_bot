{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_root\\\\frontend\\\\src\\\\pages\\\\RobotController.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { FiCpu } from 'react-icons/fi';\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\nimport { speakWithAudioFeedback, stopSpeaking, startListening } from '../utils/voice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nexport default function RobotController() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [recognizedName, setRecognizedName] = useState('');\n  const [collegeName, setCollegeName] = useState('');\n  const [robotMessage, setRobotMessage] = useState('🎓 Initializing...');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [volume, setVolume] = useState(0);\n  const [status, setStatus] = useState('listening');\n  const greetedPeopleRef = useRef(new Set());\n  const interruptedRef = useRef(false);\n  useEffect(() => {\n    greetedPeopleRef.current.clear();\n    fetchCollegeName();\n    const interval = setInterval(fetchRecognition, 2000);\n    startListening(handleTranscript);\n    return () => {\n      clearInterval(interval);\n      stopSpeaking();\n    };\n  }, []);\n  const logChatToServer = async (sender, receiver, message) => {\n    try {\n      await axios.post(`${API_URL}/api/log_chat`, {\n        sender,\n        receiver,\n        message\n      });\n    } catch (err) {\n      console.error('Logging chat failed:', err);\n    }\n  };\n  const handleTranscript = async (text, isFinal) => {\n    if (!isFinal || !text.trim()) return;\n    if (isSpeaking) {\n      stopSpeaking();\n      setIsSpeaking(false);\n      interruptedRef.current = true;\n    }\n    const userQuery = text.trim();\n    setRobotMessage(`🧠 Processing: ${userQuery}`);\n    setStatus('talking');\n    await logChatToServer('User', 'Bot', userQuery);\n    try {\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\n        query: userQuery\n      });\n      const response = res.data.response || \"Sorry, I didn't catch that.\";\n      setRobotMessage(response);\n      await logChatToServer('Bot', 'User', response);\n      setIsSpeaking(true);\n      setStatus('talking');\n      speakWithAudioFeedback(response, setVolume, () => {\n        setIsSpeaking(false);\n        setStatus('listening');\n        interruptedRef.current = false;\n      }, handleTranscript);\n    } catch (err) {\n      console.error('Voice fetch failed:', err);\n      setRobotMessage(\"⚠️ Error reaching assistant.\");\n      setStatus('listening');\n    }\n  };\n  const handleTextQuery = async userQuery => {\n    setRobotMessage(`🧠 Processing: ${userQuery}`);\n    setStatus('talking');\n    await logChatToServer('User', 'Bot', userQuery);\n    try {\n      const res = await axios.post(`${API_URL}/api/robot_ask`, {\n        query: userQuery\n      });\n      const response = res.data.response || \"Sorry, I didn't catch that.\";\n      setRobotMessage(response);\n      await logChatToServer('Bot', 'User', response);\n      setIsSpeaking(true);\n      setStatus('talking');\n      speakWithAudioFeedback(response, setVolume, () => {\n        setIsSpeaking(false);\n        setStatus('listening');\n      }, handleTranscript);\n    } catch (err) {\n      setRobotMessage(\"⚠️ Error reaching assistant.\");\n      setStatus('listening');\n    }\n  };\n  const fetchCollegeName = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/college_name`);\n      setCollegeName(res.data.name || 'Your College');\n    } catch {\n      setCollegeName('Unknown College');\n    }\n  };\n  const fetchRecognition = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\n      const {\n        name\n      } = res.data;\n      if (!name || greetedPeopleRef.current.has(name)) return;\n      stopSpeaking();\n      const isKnown = name.toLowerCase() !== 'unknown';\n      const finalName = isKnown ? name : '';\n      const greeting = isKnown ? `Hi ${finalName}, I'm your assistant at ${collegeName}. How can I help you today?` : `Hi, I'm the college bot. How can I help you today?`;\n      setRobotMessage(greeting);\n      setRecognizedName(finalName);\n      setIsSpeaking(true);\n      await logChatToServer('Bot', finalName || 'Visitor', greeting);\n      speakWithAudioFeedback(greeting, setVolume, () => {\n        setIsSpeaking(false);\n      }, handleTranscript);\n      greetedPeopleRef.current.add(name);\n    } catch (err) {\n      console.error('Face recognition failed:', err);\n    }\n  };\n  useEffect(() => {\n    const drawOverlay = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n      const img = videoRef.current;\n      if (!canvas || !ctx || !img) return;\n      const width = img.clientWidth;\n      const height = img.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n      ctx.clearRect(0, 0, width, height);\n      if (recognizedName) {\n        ctx.save();\n        ctx.fillStyle = '#28a745';\n        ctx.font = 'bold 2rem sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'top';\n        // ctx.fillText(`🎉 Hello, ${recognizedName}`, width / 2, 20);\n        ctx.restore();\n      }\n    };\n    const drawInterval = setInterval(drawOverlay, 500);\n    return () => clearInterval(drawInterval);\n  }, [recognizedName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 fade-in max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-card p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600 text-white\",\n          children: /*#__PURE__*/_jsxDEV(FiCpu, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold gradient-text\",\n            children: \"Robot Controller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 dark:text-gray-300\",\n            children: \"Voice Streaming + Face Recognition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card overflow-hidden relative min-h-[320px]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full aspect-video rounded-xl overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            ref: videoRef,\n            src: `${API_URL}/video_feed`,\n            alt: \"Robot Camera\",\n            className: \"w-full h-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"absolute top-0 left-0 w-full h-full pointer-events-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-card p-6 flex flex-col justify-between items-center min-h-[320px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 w-full overflow-y-auto max-h-[200px] custom-scroll\",\n          children: /*#__PURE__*/_jsxDEV(RobotSpeechDisplay, {\n            message: robotMessage,\n            isSpeaking: isSpeaking,\n            status: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-4\",\n          children: status === 'talking' ? 'Talking...' : 'Listening... Speak anytime 👂'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotController, \"SO/O1etfE4yBA8wYL+eGJ3g0ZDM=\");\n_c = RobotController;\nvar _c;\n$RefreshReg$(_c, \"RobotController\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","FiCpu","RobotSpeechDisplay","speakWithAudioFeedback","stopSpeaking","startListening","jsxDEV","_jsxDEV","API_URL","RobotController","_s","videoRef","canvasRef","recognizedName","setRecognizedName","collegeName","setCollegeName","robotMessage","setRobotMessage","isSpeaking","setIsSpeaking","volume","setVolume","status","setStatus","greetedPeopleRef","Set","interruptedRef","current","clear","fetchCollegeName","interval","setInterval","fetchRecognition","handleTranscript","clearInterval","logChatToServer","sender","receiver","message","post","err","console","error","text","isFinal","trim","userQuery","res","query","response","data","handleTextQuery","get","name","has","isKnown","toLowerCase","finalName","greeting","add","drawOverlay","canvas","ctx","getContext","img","width","clientWidth","height","clientHeight","clearRect","save","fillStyle","font","textAlign","textBaseline","restore","drawInterval","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","_c","$RefreshReg$"],"sources":["D:/project_root/frontend/src/pages/RobotController.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { FiCpu } from 'react-icons/fi';\nimport RobotSpeechDisplay from './RobotSpeechDisplay';\nimport {\n  speakWithAudioFeedback,\n  stopSpeaking,\n  startListening,\n} from '../utils/voice';\n\nconst API_URL = 'http://localhost:5000';\n\nexport default function RobotController() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const [recognizedName, setRecognizedName] = useState('');\n  const [collegeName, setCollegeName] = useState('');\n  const [robotMessage, setRobotMessage] = useState('🎓 Initializing...');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [volume, setVolume] = useState(0);\n  const [status, setStatus] = useState('listening');\n\n  const greetedPeopleRef = useRef(new Set());\n  const interruptedRef = useRef(false);\n\n  useEffect(() => {\n    greetedPeopleRef.current.clear();\n    fetchCollegeName();\n\n    const interval = setInterval(fetchRecognition, 2000);\n    startListening(handleTranscript);\n\n    return () => {\n      clearInterval(interval);\n      stopSpeaking();\n    };\n  }, []);\n\n  const logChatToServer = async (sender, receiver, message) => {\n    try {\n      await axios.post(`${API_URL}/api/log_chat`, {\n        sender,\n        receiver,\n        message,\n      });\n    } catch (err) {\n      console.error('Logging chat failed:', err);\n    }\n  };\n\n  const handleTranscript = async (text, isFinal) => {\n    if (!isFinal || !text.trim()) return;\n\n    if (isSpeaking) {\n      stopSpeaking();\n      setIsSpeaking(false);\n      interruptedRef.current = true;\n    }\n\n    const userQuery = text.trim();\n    setRobotMessage(`🧠 Processing: ${userQuery}`);\n    setStatus('talking');\n    await logChatToServer('User', 'Bot', userQuery);\n\n    try {\n      const res = await axios.post(`${API_URL}/api/robot_ask`, { query: userQuery });\n      const response = res.data.response || \"Sorry, I didn't catch that.\";\n      setRobotMessage(response);\n      await logChatToServer('Bot', 'User', response);\n\n      setIsSpeaking(true);\n      setStatus('talking');\n      speakWithAudioFeedback(response, setVolume, () => {\n        setIsSpeaking(false);\n        setStatus('listening');\n        interruptedRef.current = false;\n      }, handleTranscript);\n    } catch (err) {\n      console.error('Voice fetch failed:', err);\n      setRobotMessage(\"⚠️ Error reaching assistant.\");\n      setStatus('listening');\n    }\n  };\n\n  const handleTextQuery = async (userQuery) => {\n    setRobotMessage(`🧠 Processing: ${userQuery}`);\n    setStatus('talking');\n    await logChatToServer('User', 'Bot', userQuery);\n    try {\n      const res = await axios.post(`${API_URL}/api/robot_ask`, { query: userQuery });\n      const response = res.data.response || \"Sorry, I didn't catch that.\";\n      setRobotMessage(response);\n      await logChatToServer('Bot', 'User', response);\n      setIsSpeaking(true);\n      setStatus('talking');\n      speakWithAudioFeedback(response, setVolume, () => {\n        setIsSpeaking(false);\n        setStatus('listening');\n      }, handleTranscript);\n    } catch (err) {\n      setRobotMessage(\"⚠️ Error reaching assistant.\");\n      setStatus('listening');\n    }\n  };\n\n  const fetchCollegeName = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/college_name`);\n      setCollegeName(res.data.name || 'Your College');\n    } catch {\n      setCollegeName('Unknown College');\n    }\n  };\n\n  const fetchRecognition = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/api/recognized_face`);\n      const { name } = res.data;\n\n      if (!name || greetedPeopleRef.current.has(name)) return;\n\n      stopSpeaking();\n\n      const isKnown = name.toLowerCase() !== 'unknown';\n      const finalName = isKnown ? name : '';\n      const greeting = isKnown\n        ? `Hi ${finalName}, I'm your assistant at ${collegeName}. How can I help you today?`\n        : `Hi, I'm the college bot. How can I help you today?`;\n\n      setRobotMessage(greeting);\n      setRecognizedName(finalName);\n      setIsSpeaking(true);\n\n      await logChatToServer('Bot', finalName || 'Visitor', greeting);\n\n      speakWithAudioFeedback(greeting, setVolume, () => {\n        setIsSpeaking(false);\n      }, handleTranscript);\n\n      greetedPeopleRef.current.add(name);\n    } catch (err) {\n      console.error('Face recognition failed:', err);\n    }\n  };\n\n  useEffect(() => {\n    const drawOverlay = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas?.getContext('2d');\n      const img = videoRef.current;\n      if (!canvas || !ctx || !img) return;\n\n      const width = img.clientWidth;\n      const height = img.clientHeight;\n\n      canvas.width = width;\n      canvas.height = height;\n      ctx.clearRect(0, 0, width, height);\n\n      if (recognizedName) {\n        ctx.save();\n        ctx.fillStyle = '#28a745';\n        ctx.font = 'bold 2rem sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'top';\n        // ctx.fillText(`🎉 Hello, ${recognizedName}`, width / 2, 20);\n        ctx.restore();\n      }\n    };\n\n    const drawInterval = setInterval(drawOverlay, 500);\n    return () => clearInterval(drawInterval);\n  }, [recognizedName]);\n\n  return (\n    <div className=\"space-y-6 fade-in max-w-5xl mx-auto\">\n      {/* Header */}\n      <div className=\"glass-card p-6\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"p-3 rounded-xl bg-gradient-to-r from-purple-600 to-indigo-600 text-white\">\n            <FiCpu size={24} />\n          </div>\n          <div>\n            <h1 className=\"text-3xl font-bold gradient-text\">Robot Controller</h1>\n            <p className=\"text-gray-600 dark:text-gray-300\">\n              Voice Streaming + Face Recognition\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Camera Feed with Canvas Overlay */}\n        <div className=\"glass-card overflow-hidden relative min-h-[320px]\">\n          <div className=\"relative w-full aspect-video rounded-xl overflow-hidden\">\n            <img\n              ref={videoRef}\n              src={`${API_URL}/video_feed`}\n              alt=\"Robot Camera\"\n              className=\"w-full h-full object-cover\"\n            />\n            <canvas\n              ref={canvasRef}\n              className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\n            />\n          </div>\n        </div>\n\n        {/* Robot Avatar with Scrollable Response */}\n        <div className=\"glass-card p-6 flex flex-col justify-between items-center min-h-[320px]\">\n          <div className=\"flex-1 w-full overflow-y-auto max-h-[200px] custom-scroll\">\n            <RobotSpeechDisplay\n              message={robotMessage}\n              isSpeaking={isSpeaking}\n              status={status}\n            />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-4\">{status === 'talking' ? 'Talking...' : 'Listening... Speak anytime 👂'}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}