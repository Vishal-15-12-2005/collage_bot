{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_root\\\\frontend\\\\src\\\\pages\\\\ChangeLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangeLog = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const res = await API.get('/change_log');\n        setLogs(res.data);\n      } catch (err) {\n        setError('Failed to fetch change log.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLogs();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading change log...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-5xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Change Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"Record ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-2 py-1 border\",\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.table_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.record_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-2 py-1 border\",\n              children: log.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, log.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangeLog, \"gzb/4c7Zsr+sWGWKEVsHgHc6uCM=\");\n_c = ChangeLog;\nexport default ChangeLog;\nvar _c;\n$RefreshReg$(_c, \"ChangeLog\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","ChangeLog","_s","logs","setLogs","loading","setLoading","error","setError","fetchLogs","res","get","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","log","id","username","role","action","table_name","record_id","details","timestamp","_c","$RefreshReg$"],"sources":["D:/project_root/frontend/src/pages/ChangeLog.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../utils/api';\r\n\r\nconst ChangeLog = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchLogs = async () => {\r\n      try {\r\n        const res = await API.get('/change_log');\r\n        setLogs(res.data);\r\n      } catch (err) {\r\n        setError('Failed to fetch change log.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchLogs();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading change log...</div>;\r\n  if (error) return <div className=\"text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-5xl mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Change Log</h2>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full border border-gray-300\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"px-2 py-1 border\">ID</th>\r\n              <th className=\"px-2 py-1 border\">Username</th>\r\n              <th className=\"px-2 py-1 border\">Role</th>\r\n              <th className=\"px-2 py-1 border\">Action</th>\r\n              <th className=\"px-2 py-1 border\">Table</th>\r\n              <th className=\"px-2 py-1 border\">Record ID</th>\r\n              <th className=\"px-2 py-1 border\">Details</th>\r\n              <th className=\"px-2 py-1 border\">Timestamp</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {logs.map(log => (\r\n              <tr key={log.id}>\r\n                <td className=\"px-2 py-1 border\">{log.id}</td>\r\n                <td className=\"px-2 py-1 border\">{log.username}</td>\r\n                <td className=\"px-2 py-1 border\">{log.role}</td>\r\n                <td className=\"px-2 py-1 border\">{log.action}</td>\r\n                <td className=\"px-2 py-1 border\">{log.table_name}</td>\r\n                <td className=\"px-2 py-1 border\">{log.record_id}</td>\r\n                <td className=\"px-2 py-1 border\">{log.details}</td>\r\n                <td className=\"px-2 py-1 border\">{log.timestamp}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeLog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}